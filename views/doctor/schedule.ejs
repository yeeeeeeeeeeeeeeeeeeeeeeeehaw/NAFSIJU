<%- include('../partials/header') %>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Therapist Dashboard - Schedule</title>
  <style>
    body { font-family: Arial, sans-serif; margin:0; padding:0; background:#f9f9f9; }
    header { background:#4f46e5; color:white; padding:20px; display:flex; justify-content:space-between; }
    header a { color:white; margin-left:10px; text-decoration:none; }
    .container { padding:20px; }
    table { width:100%; border-collapse: collapse; background:white; box-shadow:0 2px 6px rgba(0,0,0,0.1); }
    th, td { padding:12px; border:1px solid #ddd; text-align:left; }
    th { background:#f0f0ff; }
    .actions button { margin-right:5px; background:#4f46e5; color:white; border:none; padding:6px 12px; border-radius:5px; cursor:pointer; }
    .add-appointment { margin-top:15px; padding:10px 20px; background:#4f46e5; color:white; border:none; border-radius:5px; cursor:pointer; }
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0; top: 0; width: 100vw; height: 100vh;
      background: rgba(0,0,0,0.18);
      align-items: center; justify-content: center;
    }
    .modal.active { display: flex; }
    .modal-content {
      background: #fff;
      padding: 2rem 1.5rem;
      border-radius: 12px;
      box-shadow: 0 4px 24px rgba(0,0,0,0.13);
      min-width: 320px;
      max-width: 95vw;
      animation: fadeInModal 0.3s;
      position: relative;
    }
    @keyframes fadeInModal {
      from { opacity: 0; transform: scale(0.97); }
      to { opacity: 1; transform: scale(1); }
    }
    .modal-actions { margin-top: 1.2rem; display: flex; gap: 1rem; justify-content: flex-end; }
    .modal-actions button { padding: 7px 18px; border-radius: 6px; border: none; font-weight: 500; cursor: pointer; }
    .modal-actions .confirm { background: #4f46e5; color: #fff; }
    .modal-actions .cancel { background: #eee; color: #333; }
    .modal-close { position: absolute; top: 18px; right: 22px; font-size: 1.3rem; color: #888; background: none; border: none; cursor: pointer; }
    .modal label { display: block; margin-top: 0.7rem; font-weight: 500; }
    .modal input, .modal textarea {
      width: 100%; margin-top: 0.3rem; padding: 7px 10px; border-radius: 6px; border: 1px solid #ccc; font-size: 1rem;
    }
  </style>
</head>
<body>
<!-- <header>
  <div>Therapist Dashboard - Schedule</div>
  <div>
    <a href="/doctor/schedule">Schedule</a>
    <a href="/doctor/patients">Patients</a>
    <a href="/doctor/medications">Medications</a>
    <a href="/doctor/medical-records">Medical Records</a>
    <a href="/doctor/profile">Profile</a>
    <a href="/logout">Logout</a>
  </div>
</header> -->

<div class="container">
  <h2>
    Your Appointments for the Week
    <small>
      <a href="/doctor/schedule?week=<%= prevWeek %>">&lt; Prev</a> |
      <a href="/doctor/schedule?week=<%= nextWeek %>">Next &gt;</a>
    </small>
  </h2>

  <% if (appointments.length === 0) { %>
    <p>No appointments scheduled for this week.</p>
  <% } else { %>
    <table>
      <thead>
        <tr>
          <th>Date</th>
          <th>Time</th>
          <th>Patient</th>
          <th>Notes</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% appointments.forEach(appointment => { %>
          <tr>
            <td><%= new Date(appointment.start_at).toLocaleDateString() %></td>
            <td><%= new Date(appointment.start_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %> - <%= new Date(appointment.end_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %></td>
            <td><%= appointment.patient_name %></td>
            <td><%= appointment.notes || '-' %></td>
            <td class="actions">
              <button 
                class="edit-btn"
                data-id="<%= appointment.id %>"
                data-date="<%= new Date(appointment.start_at).toLocaleDateString() %>"
                data-time="<%= new Date(appointment.start_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %>"
                data-patient="<%= appointment.patient_name %>"
                data-notes="<%= appointment.notes ? appointment.notes.replace(/\r?\n/g, ' ') : '' %>"
                onclick="handleEditBtn(this)"
              >Edit</button>
              <button onclick="openDeleteModal(<%= appointment.id %>)">Delete</button>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  <% } %>

  <button class="add-appointment" onclick="location.href='/doctor/schedule/new'">
    + Add Appointment
  </button>
</div>

<!-- Edit Appointment Modal -->
<div id="editModal" class="modal">
  <div class="modal-content">
    <button class="modal-close" onclick="closeEditModal()">&times;</button>
    <h3>Edit Appointment</h3>
    <form id="editForm">
      <input type="hidden" id="editId" name="id" />
      <label>Date</label>
      <input type="text" id="editDate" name="date" readonly />
      <label>Time</label>
      <input type="text" id="editTime" name="time" readonly />
      <label>Patient</label>
      <input type="text" id="editPatient" name="patient" readonly />
      <label>Notes</label>
      <textarea id="editNotes" name="notes" rows="3"></textarea>
      <div class="modal-actions">
        <button type="submit" class="confirm">Save</button>
        <button type="button" class="cancel" onclick="closeEditModal()">Cancel</button>
      </div>
    </form>
  </div>
</div> 

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="modal">
  <div class="modal-content">
    <button class="modal-close" onclick="closeDeleteModal()">&times;</button>
    <h3>Delete Appointment</h3>
    <p>Are you sure you want to delete this appointment?</p>
    <div class="modal-actions">
      <button class="confirm" onclick="confirmDelete()">Yes</button>
      <button class="cancel" onclick="closeDeleteModal()">No</button>
    </div>
  </div>
</div>

<script>
  let currentEditId = null;
  let currentDeleteId = null;

  function openEditModal(appointment) {
    currentEditId = appointment.id;
    document.getElementById('editId').value = appointment.id;
    document.getElementById('editDate').value = appointment.date || '';
    document.getElementById('editTime').value = appointment.time || '';
    document.getElementById('editPatient').value = appointment.patient_name || '';
    document.getElementById('editNotes').value = appointment.notes || '';
    document.getElementById('editModal').classList.add('active');
  }
  function closeEditModal() {
    document.getElementById('editModal').classList.remove('active');
  }
  document.getElementById('editForm').onsubmit = async function(e) {
    e.preventDefault();
    const id = document.getElementById('editId').value;
    const notes = document.getElementById('editNotes').value;
    try {
      const res = await fetch(`/doctor/schedule/${id}/edit`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ notes })
      });
      if (res.ok) location.reload();
      else alert('Failed to update appointment.');
    } catch {
      alert('Network error.');
    }
  };

  function openDeleteModal(id) {
    currentDeleteId = id;
    document.getElementById('deleteModal').classList.add('active');
  }
  function closeDeleteModal() {
    document.getElementById('deleteModal').classList.remove('active');
  }
  async function confirmDelete() {
    if (!currentDeleteId) return;
    try {
      const res = await fetch(`/doctor/schedule/${currentDeleteId}/delete`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
      });
      if (res.ok) location.reload();
      else alert('Failed to delete appointment.');
    } catch {
      alert('Network error.');
    }
    closeDeleteModal();
  }

  function handleEditBtn(btn) {
    const appointment = {
      id: btn.getAttribute('data-id'),
      date: btn.getAttribute('data-date'),
      time: btn.getAttribute('data-time'),
      patient_name: btn.getAttribute('data-patient'),
      notes: btn.getAttribute('data-notes')
    };
    openEditModal(appointment);
  }
</script>
</body>
</html>
